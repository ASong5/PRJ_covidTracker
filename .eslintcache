[{"D:\\PRJ_covidTracker\\src\\index.js":"1","D:\\PRJ_covidTracker\\src\\App.js":"2","D:\\PRJ_covidTracker\\src\\context\\canadaContext.js":"3","D:\\PRJ_covidTracker\\src\\context\\globalContext.js":"4","D:\\PRJ_covidTracker\\src\\pages\\GlobalCovidPage.js":"5","D:\\PRJ_covidTracker\\src\\pages\\CanadaCovidPage.js":"6","D:\\PRJ_covidTracker\\src\\actions\\canadaActions.js":"7","D:\\PRJ_covidTracker\\src\\utils\\helpers.js":"8","D:\\PRJ_covidTracker\\src\\reducer\\canadaReducer.js":"9","D:\\PRJ_covidTracker\\src\\reducer\\globalReducer.js":"10","D:\\PRJ_covidTracker\\src\\actions\\globalActions.js":"11","D:\\PRJ_covidTracker\\src\\components\\InfoBox.js":"12","D:\\PRJ_covidTracker\\src\\components\\LineGraph.js":"13","D:\\PRJ_covidTracker\\src\\components\\Table.js":"14","D:\\PRJ_covidTracker\\src\\components\\NavBar.js":"15","D:\\PRJ_covidTracker\\src\\components\\Map\\Map.js":"16","D:\\PRJ_covidTracker\\src\\components\\Map\\ChangeView.js":"17","D:\\PRJ_covidTracker\\src\\components\\InfoBoxes.js":"18","D:\\PRJ_covidTracker\\src\\components\\sidebarContainer\\sidebarContainer.js":"19","D:\\PRJ_covidTracker\\src\\components\\SideDrawer\\SideDrawer.js":"20","D:\\PRJ_covidTracker\\src\\components\\DrawerToggleButton\\DrawerToggleButton.js":"21"},{"size":486,"mtime":1616313276457,"results":"22","hashOfConfig":"23"},{"size":504,"mtime":1617198395613,"results":"24","hashOfConfig":"23"},{"size":3451,"mtime":1618398999172,"results":"25","hashOfConfig":"23"},{"size":3698,"mtime":1616313276455,"results":"26","hashOfConfig":"23"},{"size":4111,"mtime":1618394095827,"results":"27","hashOfConfig":"23"},{"size":3129,"mtime":1618394095826,"results":"28","hashOfConfig":"23"},{"size":409,"mtime":1616320987423,"results":"29","hashOfConfig":"23"},{"size":2453,"mtime":1618399157195,"results":"30","hashOfConfig":"23"},{"size":1161,"mtime":1616842895514,"results":"31","hashOfConfig":"23"},{"size":1941,"mtime":1616313276461,"results":"32","hashOfConfig":"23"},{"size":478,"mtime":1616313276442,"results":"33","hashOfConfig":"23"},{"size":917,"mtime":1617198395614,"results":"34","hashOfConfig":"23"},{"size":1636,"mtime":1617198395615,"results":"35","hashOfConfig":"23"},{"size":1453,"mtime":1617198395617,"results":"36","hashOfConfig":"23"},{"size":629,"mtime":1616313276451,"results":"37","hashOfConfig":"23"},{"size":1393,"mtime":1617198395616,"results":"38","hashOfConfig":"23"},{"size":196,"mtime":1616313276448,"results":"39","hashOfConfig":"23"},{"size":1714,"mtime":1616850505832,"results":"40","hashOfConfig":"23"},{"size":807,"mtime":1618394095825,"results":"41","hashOfConfig":"23"},{"size":842,"mtime":1618394095824,"results":"42","hashOfConfig":"23"},{"size":329,"mtime":1618394095823,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"14b4qbb",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PRJ_covidTracker\\src\\index.js",[],["90","91"],"D:\\PRJ_covidTracker\\src\\App.js",[],"D:\\PRJ_covidTracker\\src\\context\\canadaContext.js",["92","93"],"import React, { useState, useEffect, useReducer, useContext } from \"react\";\r\nimport { fetchThings, buildChartData } from \"../utils/helpers\";\r\nimport reducer from \"../reducer/canadaReducer\";\r\nimport {\r\n  LOAD_ALL_PROVINCES_DATA,\r\n  LOAD_CANADA_DATA,\r\n  SET_CASE_TYPE,\r\n  SET_PROVINCE_INPUT,\r\n  LOAD_HISTORICAL_CANADA,\r\n  LOAD_HISTORICAL_PROVINCES,\r\n  SET_TYPE_INPUT,\r\n} from \"../actions/canadaActions\";\r\nimport { } from \"../actions/canadaActions\";\r\n\r\nconst initialState = {\r\n  provinces: [],\r\n  canada: [],\r\n  caseType: \"cases\",\r\n  provinceInput: \"Canada\",\r\n  typeInput: \"confirmed\",\r\n  typeInputData: [\r\n    { type: \"confirmed\", name: \"Confirmed Cases\" },\r\n    { type: \"deaths\", name: \"Deaths\" },\r\n    { type: \"recovered\", name: \"Recovered Cases\" },\r\n  ],\r\n  historicalProvince: []\r\n};\r\n\r\nconst CanadaContext = React.createContext();\r\n\r\nexport const CanadaContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //**fetch data for Canada */\r\n\r\n  const fetchCanada = async () => {\r\n    let url = \"https://disease.sh/v3/covid-19/countries/CA?strict=true\";\r\n    const data = await fetchThings(url);\r\n    dispatch({ type: LOAD_CANADA_DATA, payload: data });\r\n  };\r\n  //**fetch data of all provinces in Canada */\r\n  const fetchProvinces = async () => {\r\n    let url = \"https://disease.sh/v3/covid-19/jhucsse\";\r\n    let data = await fetchThings(url);\r\n    data = data.filter((a) => a.country === \"Canada\");\r\n    dispatch({ type: LOAD_ALL_PROVINCES_DATA, payload: data });\r\n  };\r\n\r\n\r\n  //**set type input */\r\n\r\n  const setTypeInput = (e) => {\r\n    dispatch({ type: SET_TYPE_INPUT, payload: e.target.value });\r\n  };\r\n\r\n  /**Set province input for dropdown menu */\r\n\r\n  const setProvinceInput = (e) => {\r\n    dispatch({ type: SET_PROVINCE_INPUT, payload: e.target.value })\r\n  }\r\n\r\n  /**Set case type  */\r\n  const setCaseType = (type) => {\r\n    dispatch({ type: SET_CASE_TYPE, payload: type })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchHistorical = async () => {\r\n      let url = \"\";\r\n      let chartData;\r\n      try {\r\n        if (state.provinceInput === \"Canada\") {\r\n          url = `https://disease.sh/v3/covid-19/historical/CA?lastdays=120`;\r\n          const data = await fetchThings(url);\r\n          chartData = buildChartData(data.timeline, state.caseType);\r\n        } else {\r\n          url = `https://disease.sh/v3/covid-19/historical?lastdays=120`;\r\n          let data = await fetchThings(url);\r\n          const provinceInputLower = state.provinceInput.toLowerCase();\r\n          data = data.filter(d => d.province === provinceInputLower);\r\n          if (data.message) {\r\n            chartData = data; // in case there is no available data, it will return a message\r\n          } else {\r\n            chartData = buildChartData(data[0].timeline, state.caseType);\r\n          }\r\n        }\r\n        dispatch({ type: LOAD_HISTORICAL_PROVINCES, payload: chartData });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchHistorical();\r\n  }, [state.provinceInput, state.provinces, state.caseType]);\r\n\r\n  useEffect(() => {\r\n    fetchCanada();\r\n    fetchProvinces();\r\n  }, []);\r\n  return (\r\n    //to pass the state from the context Provider\r\n    <CanadaContext.Provider value={{ ...state, setTypeInput, setProvinceInput, setCaseType }}>\r\n      {children}\r\n    </CanadaContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCanadaContext = () => {\r\n  return useContext(CanadaContext);\r\n};\r\n","D:\\PRJ_covidTracker\\src\\context\\globalContext.js",[],"D:\\PRJ_covidTracker\\src\\pages\\GlobalCovidPage.js",["94"],"D:\\PRJ_covidTracker\\src\\pages\\CanadaCovidPage.js",["95","96","97","98"],"D:\\PRJ_covidTracker\\src\\actions\\canadaActions.js",[],"D:\\PRJ_covidTracker\\src\\utils\\helpers.js",[],"D:\\PRJ_covidTracker\\src\\reducer\\canadaReducer.js",["99"],"import {\r\n  LOAD_ALL_PROVINCES_DATA,\r\n  LOAD_CANADA_DATA,\r\n  SET_CASE_TYPE,\r\n  SET_PROVINCE_INPUT,\r\n  LOAD_HISTORICAL_CANADA,\r\n  LOAD_HISTORICAL_PROVINCES,\r\n  SET_TYPE_INPUT\r\n} from \"../actions/canadaActions\";\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === LOAD_CANADA_DATA){\r\n        return{\r\n            ...state,\r\n            canada: action.payload\r\n        }\r\n    }\r\n\r\n    if (action.type === LOAD_ALL_PROVINCES_DATA){\r\n        return{\r\n            ...state,\r\n            provinces: action.payload\r\n        }\r\n    }\r\n\r\n    if (action.type === SET_TYPE_INPUT){\r\n        return{\r\n          ...state,\r\n          typeInput: action.payload\r\n        }\r\n      }\r\n    \r\n    if (action.type === SET_PROVINCE_INPUT){\r\n      return{\r\n        ...state,\r\n        provinceInput: action.payload\r\n      }\r\n    }\r\n\r\n    if (action.type === SET_CASE_TYPE){\r\n      return{\r\n        ...state,\r\n        caseType: action.payload\r\n      }\r\n    }\r\n\r\n    if (action.type === LOAD_HISTORICAL_PROVINCES){\r\n      \r\n      return{\r\n        ...state,\r\n        historicalProvince: action.payload\r\n      }\r\n    }\r\n\r\n    return state;\r\n    \r\n};\r\n\r\nexport default reducer;\r\n","D:\\PRJ_covidTracker\\src\\reducer\\globalReducer.js",[],"D:\\PRJ_covidTracker\\src\\actions\\globalActions.js",[],"D:\\PRJ_covidTracker\\src\\components\\InfoBox.js",[],"D:\\PRJ_covidTracker\\src\\components\\LineGraph.js",[],"D:\\PRJ_covidTracker\\src\\components\\Table.js",["100","101"],"import React from 'react'\r\nimport './Table.css'\r\nimport numeral from 'numeral'\r\nimport { useGlobalContext } from '../context/globalContext'\r\nimport { useCanadaContext } from '../context/canadaContext'\r\nimport { sortDataCountries, sortDataProvinces } from '../utils/helpers'\r\nfunction Table(props) {\r\n    let tempData = [...props.data];\r\n    tempData.length > 100 ? tempData = sortDataCountries(tempData, props.typeInput) : tempData = sortDataProvinces(tempData, props.typeInput);\r\n    return (\r\n        <div className='table'>\r\n            {\r\n                tempData.length > 100 ? tempData.map(country => {\r\n                    return (\r\n                        <tr>\r\n                            <td>{country.country}</td>\r\n                            <td>\r\n                                <strong>{numeral(country[props.typeInput]).format(\"0,0\")}</strong>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }) :\r\n                    tempData.map(p => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{p.province}</td>\r\n                                <td>\r\n                                    <strong>{numeral(p.stats[props.typeInput]).format(\"0,0\")}</strong>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","D:\\PRJ_covidTracker\\src\\components\\NavBar.js",[],"D:\\PRJ_covidTracker\\src\\components\\Map\\Map.js",[],"D:\\PRJ_covidTracker\\src\\components\\Map\\ChangeView.js",[],"D:\\PRJ_covidTracker\\src\\components\\InfoBoxes.js",[],"D:\\PRJ_covidTracker\\src\\components\\sidebarContainer\\sidebarContainer.js",[],"D:\\PRJ_covidTracker\\src\\components\\SideDrawer\\SideDrawer.js",[],"D:\\PRJ_covidTracker\\src\\components\\DrawerToggleButton\\DrawerToggleButton.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"110","line":9,"column":3,"nodeType":"108","messageId":"109","endLine":9,"endColumn":25},{"ruleId":"106","severity":1,"message":"111","line":11,"column":8,"nodeType":"108","messageId":"109","endLine":11,"endColumn":14},{"ruleId":"106","severity":1,"message":"112","line":9,"column":10,"nodeType":"108","messageId":"109","endLine":9,"endColumn":26},{"ruleId":"106","severity":1,"message":"111","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":14},{"ruleId":"106","severity":1,"message":"113","line":13,"column":8,"nodeType":"108","messageId":"109","endLine":13,"endColumn":15},{"ruleId":"106","severity":1,"message":"114","line":18,"column":8,"nodeType":"108","messageId":"109","endLine":18,"endColumn":15},{"ruleId":"106","severity":1,"message":"110","line":6,"column":3,"nodeType":"108","messageId":"109","endLine":6,"endColumn":25},{"ruleId":"106","severity":1,"message":"112","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":26},{"ruleId":"106","severity":1,"message":"115","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":26},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'LOAD_HISTORICAL_CANADA' is defined but never used.","'Navbar' is defined but never used.","'useGlobalContext' is defined but never used.","'InfoBox' is defined but never used.","'numeral' is defined but never used.","'useCanadaContext' is defined but never used.","no-global-assign","no-unsafe-negation"]